spring:
  profiles: development

---
spring:
  profiles: development
  jpa:
    show_sql: false
    database: H2
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
    initialize: false
security:
  oauth2:
    resource:
      jwt:
        key-uri: "http://localhost:8001/user-service/oauth/token_key"
yikejian:
  api:
    user:
      url: "http://user-service/user-service/v1/me"
    product:
      url: "http://product-service/product-service/v1"
    inventory:
      url: "http://inventory-service/inventory-service/v1"
    store:
      url: "http://store-service/store-service/v1"
---
spring:
  profiles: test
  datasource:
    url: jdbc:mysql://192.168.99.1:3306/orders?characterEncoding=utf-8
    username: root
    password: 123456
    initialize: true
security:
  oauth2:
    resource:
      jwt:
        key-uri: "http://192.168.1.101:8001/user-service/oauth/token_key"
yikejian:
  api:
    user:
      url: "http://192.168.1.101:8001/user-service/v1/me"
    customer:
      url: "http://192.168.1.101:8002/customer-service/v1/me"
    product:
      url: "http://192.168.1.101:8004/product-service/v1"
    inventory:
      url: "http://192.168.1.101:8005/inventory-service/v1"
    store:
      url: "http://192.168.1.101:8003/store-service/v1"
---
spring:
  profiles: production
  datasource:
    url: jdbc:mysql://rm-wz9zran8v261152v0.mysql.rds.aliyuncs.com:3306/orders?characterEncoding=utf-8
    username: root
    password: neomal2018@)!*
    initialize: true
security:
  oauth2:
    resource:
      jwt:
        key-uri: "http://localhost:8001/user-service/oauth/token_key"
yikejian:
  api:
    user:
      url: "http://localhost:8001/user-service/v1/me"
    customer:
      url: "http://localhost:8002/customer-service/v1/me"
    product:
      url: "http://localhost:8004/product-service/v1"
    inventory:
      url: "http://localhost:8005/inventory-service/v1"
    store:
      url: "http://localhost:8003/store-service/v1"
        
            